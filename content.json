{"posts":[{"title":"Build blog with hexo and org-mode","text":"IntroductionIn this article, we’ll demonstrate how to use Hexo to build the blog with icarus theme. To be more specific, we’ll share how to use org-capture template to generate blog structure, and then use org-publish to generate Github Flavored Markdown. Hexo InstallationFirst, let’s create the initial blog structure. 12345npm install hexo-cli -ghexo init KimiSpacecd KimiSpacenpm installhexo server Next, install icarus theme. 12npm install hexo-theme-icarushexo config theme icarus After install the theme, the website portal cannot be displayed normally. This issue is because of missing dependencies. 1npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 Finally, we can configure the Plugins &amp; Widgets, and customize our personal information. Org-mode configurationOrg-captureUse org-capture to generate article. 1234567891011121314151617181920212223(defvar blog-directory (expand-file-name &quot;~/Documents/KimiSpace/&quot;) &quot;Blog path.&quot;)(defvar blog-drafts-dir (concat blog-directory &quot;_drafts/&quot;) &quot;Blog drafts path.&quot;)(defvar blog-post-dir (concat blog-directory &quot;source/_posts/&quot;) &quot;Blog post path.&quot;)(defun create-blog-post () &quot;Create an org file.&quot; (interactive) (let ((name (read-string &quot;Article name: &quot;))) (expand-file-name (format &quot;%s.org&quot; name) blog-drafts-dir)))(add-to-list 'org-capture-templates `(&quot;b&quot; &quot;Blog&quot; plain (file create-blog-post) ,(concat &quot;#+OPTIONS: toc:nil n:t\\n&quot; &quot;#+begin_export html\\n&quot; &quot;---\\n&quot; &quot;title : %^{Title}\\n&quot; &quot;excerpt : %^{Excerpt}\\n&quot; &quot;categories : %^{Categories}\\n&quot; &quot;tags : [%^{tags}]\\n&quot; &quot;---\\n&quot; &quot;#+end_export\\n&quot; &quot;\\n&quot; &quot;%?\\n&quot;))) Org-publishUse org-publish to generate markdown file. 123456789101112131415(setq org-publish-project-alist '((&quot;blog-org&quot; :base-directory &quot;~/Documents/KimiSpace/_drafts/&quot; :base-extension &quot;org&quot; :publishing-directory &quot;~/Documents/KimiSpace/source/_posts/&quot; :recursive t :publishing-function org-gfm-export-to-markdown :with-toc nil :headline-levels 4 :auto-preampble nil :auto-sitemap nil :html-extension &quot;md&quot; :body-only t ) (&quot;blog&quot; :components (&quot;blog-org&quot; )))) I cannot use blog-drafts-dir and blog-post-dir here, so replace with actual paths. Org-publish should work properly, but got an error Process `org-export-process' exited abnormally, so I use self-defined function and use global keymap to publish. 1234(defun k/hexo-ox-gfm (&amp;optional async subtreep visible-only) (interactive) (let ((outfile (org-export-output-file-name &quot;.md&quot; subtreep blog-post-dir))) (org-export-to-file 'gfm outfile async subtreep visible-only)))","link":"/2022/02/27/blog-with-hexo-and-org-mode/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/02/25/hello-world/"}],"tags":[{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"org-mode","slug":"org-mode","link":"/tags/org-mode/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"common","slug":"common","link":"/tags/common/"}],"categories":[{"name":"util","slug":"util","link":"/categories/util/"},{"name":"others","slug":"others","link":"/categories/others/"}],"pages":[]}